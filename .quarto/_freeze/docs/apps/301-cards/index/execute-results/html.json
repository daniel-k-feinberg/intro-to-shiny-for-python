{
  "hash": "365663fad22bf7ea62d570d6d33c5cf6",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"301 Cards\"\n---\n\n\n::: {.callout-note collapse=\"false\"}\n## Exercise\n\n:::\n\n\n::::: {.column-screen-inset}\n::: {.panel-tabset}\n## App\n```{shinylive-python}\n#| standalone: true\n#| components: [viewer]\n#| layout: horizontal\n#| viewerHeight: 800\n# from shiny import Inputs, Outputs, Session, App, reactive, render, req, ui\nfrom shiny.express import ui, render, input\n\nwith ui.layout_columns(col_widths=(6, 6)):\n    with ui.card():\n        ui.card_header(\"Slider card\")\n        ui.input_slider(\"n\", \"N\", 0, 100, 20)\n        @render.text\n        def txt():\n            return f\"2 * n is: {input.n() * 2}\"\n    \n\n\n\n## file: app-core.py\nfrom shiny import Inputs, Outputs, Session, App, reactive, render, req, ui\nimport shiny.experimental as x\n\napp_ui = ui.page_fluid(\n    ui.column(\n        3,\n        ui.card(\n            ui.card_header(\"Slider card\"),\n            ui.input_slider(\"n\", \"N\", 0, 100, 20),\n            ui.output_text_verbatim(\"txt\"),\n            fill=False,\n        ),\n    )\n)\n\n\ndef server(input: Inputs, output: Outputs, session: Session):\n    @output\n    @render.text\n    def txt():\n        return f\"n*2 is {input.n() * 2}\"\n\n\napp = App(app_ui, server)\n\n```\n## {{< bi github >}}\nThe source code for this exercise is [here](https://github.com/posit-conf-2024/intro-to-shiny-for-python/tree/main/problem).\n:::\n:::::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}