{
  "hash": "6455a2b9f0f3418445c19b43473694d0",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"300 Navsets\"\n---\n\n\n::: {.callout-note collapse=\"false\"}\n## Exercise\n\n:::\n\n\n::::: {.column-screen-inset}\n::: {.panel-tabset}\n## App\n```{shinylive-python}\n#| standalone: true\n#| components: [viewer]\n#| layout: horizontal\n#| viewerHeight: 800\nfrom shiny.express import ui\n\nwith ui.navset_tab():\n    with ui.nav_panel( \"Panel 1\"):\n        ui.input_slider(\"slider\", \"Slider\", 0, 100, 20)\n    with ui.nav_panel(\"Panel 2\"):\n        ui.input_action_button(\"button\", \"Button A\")\n    with ui.nav_panel(\"Panel 3\"):\n        ui.input_action_button(\"button2\", \"Button B\")\n\n## file: app-core.py\nfrom shiny import Inputs, Outputs, Session, App, reactive, render, req, ui\n\napp_ui = ui.page_fluid(\n    ui.navset_tab(\n        ui.nav(\n            \"Tab1\",\n            ui.input_slider(\"slider\", \"Slider\", 0, 100, 20),\n        ),\n        ui.nav(\"Tab2\", ui.input_action_button(\"button\", \"Button\")),\n        ui.nav(\"Tab3\", ui.input_action_button(\"button2\", \"Button 2\")),\n    )\n)\n\napp = App(app_ui, None)\n\n```\n## {{< bi github >}}\nThe source code for this exercise is [here](https://github.com/posit-conf-2024/intro-to-shiny-for-python/tree/main/problem).\n:::\n:::::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}